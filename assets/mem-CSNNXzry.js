import{e as p}from"./@babel-jg6GbPat.js";import{m as l}from"./mimic-fn-Bbosp5ci.js";import{d}from"./map-age-cleaner-DAzv-5ND.js";const w=l,h=d,i=new WeakMap,f=new WeakMap,c=(o,{cacheKey:e,cache:n=new Map,maxAge:t}={})=>{typeof t=="number"&&h(n);const r=function(...a){const s=e?e(a):a[0],m=n.get(s);if(m)return m.data;const u=o.apply(this,a);return n.set(s,{data:u,maxAge:t?Date.now()+t:Number.POSITIVE_INFINITY}),u};return w(r,o,{ignoreNonConfigurable:!0}),f.set(r,n),r};c.decorator=(o={})=>(e,n,t)=>{const r=e[n];if(typeof r!="function")throw new TypeError("The decorated value must be a function");delete t.value,delete t.writable,t.get=function(){if(!i.has(this)){const a=c(r,o);return i.set(this,a),a}return i.get(this)}};c.clear=o=>{const e=f.get(o);if(!e)throw new TypeError("Can't clear a function that was not memoized!");if(typeof e.clear!="function")throw new TypeError("The cache Map can't be cleared!");e.clear()};var y=c;const E=p(y);export{E as m};
